{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBA+B/B,SAASI,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GAChCC,EAAU,C,SAAEJ,E,MAAUJ,GAE5B,OAAO,IAAIS,SAAQ,CAACC,EAASC,KACvBN,GACFK,EAAQF,GAERG,EAAOH,EAAQ,G,CApCvBZ,EAAKC,KAAKe,iBAAiB,UAE3B,SAAsBC,GAClBA,EAAMC,iBAEN,IAAIC,EAAQC,OAAOpB,EAAKI,MAAMiB,OAC9B,MAAMhB,EAAOe,OAAOpB,EAAKK,KAAKgB,OACxBf,EAASc,OAAOpB,EAAKM,OAAOe,OAGlC,IAAK,IAAIC,EAAW,EAAGA,GAAYhB,EAAQgB,GAAY,EACrDf,EAAce,EAAUH,GACrBI,MAAK,EAACf,SAAEA,EAAQJ,MAAEA,MACjBoB,YAAW,KACT1B,EAAA2B,OAAOC,QAAQ,uBAAqBlB,QAAiBJ,MAAW,CAAIuB,SAAS,GAAQ,GACpFvB,EAAM,IAEVwB,OAAM,EAACpB,SAAEA,EAAQJ,MAAEA,MAClBoB,YAAW,KACT1B,EAAA2B,OAAOI,QAAQ,sBAAoBrB,QAAeJ,MAAW,CAAIuB,SAAS,GAAQ,GACjFvB,EAAM,IAEbe,GAASd,EAGXY,EAAMa,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(event) {\n    event.preventDefault()\n\n    let delay = Number(refs.delay.value);\n    const step = Number(refs.step.value);\n    const amount = Number(refs.amount.value);\n    \n\n    for (let position = 1; position <= amount; position += 1) {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          setTimeout(() => {\n            Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, { useIcon: false });\n          }, delay);\n        })\n        .catch(({ position, delay }) => {\n          setTimeout(() => {\n            Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, { useIcon: false });\n          }, delay);\n        });\n      delay += step;\n    }\n\n    event.currentTarget.reset();\n  };\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = { position, delay };\n  \n    return new Promise((resolve, reject) => {\n      if (shouldResolve) {\n        resolve(promise);\n      }\n        reject(promise);\n    });\n  }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","promise","Promise","resolve","reject","addEventListener","event","preventDefault","delay1","Number","value","position1","then","setTimeout","Notify","success","useIcon","catch","failure","currentTarget","reset"],"version":3,"file":"03-promises.87f4a11c.js.map"}